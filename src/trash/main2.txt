// User clicked button
document.getElementById("userInputButton").addEventListener("click", getUserInput, false);

// User pressed enter '13'
document.getElementById("userInput").addEventListener("keyup", function (event) {
    if (event.keyCode === 13) {
        event.preventDefault();
        getUserInput();
    }
});

// Menu toggle
document.addEventListener("DOMContentLoaded", function() {
    const chatHistoryFilenames = document.getElementById("chatHistoryFilenames");
    const menuToggle = document.getElementById("menuToggle");
    const sidebar = document.querySelector(".sidebar");
    const menu = document.querySelector(".menu");
    const chatHistoryBtn = document.getElementById("chatHistoryBtn");
    const chatHistoryContainer = document.querySelector(".chat-history-container");
    const closeCH = document.getElementById("closeCH");
    const closModel = document.querySelector(".close");
    //const chatHistoryList = document.getElementById("chatHistoryList");
    //const chathistoryList2 = document.getElementById("chat-history-list");
    const chatHistoryList = document.getElementById("chat-history-list");
    const chatContent = document.getElementById("chat-content");
    //const chatContentainer = document.querySelector("chat-history-list");
    



    if (menuToggle && sidebar && menu) {
        menuToggle.addEventListener("click", function() {
            console.log("Menu Clicked");
            sidebar.classList.toggle("visible");
            menu.classList.toggle("active");
        });
    }
    
    if (chatHistoryBtn && chatHistoryContainer) {
        chatHistoryBtn.addEventListener("click", function () {
            chatHistoryContainer.classList.toggle("visible");
            const buttonRect = chatHistoryBtn.getBoundingClientRect();
            chatHistoryContainer.style.top = buttonRect.top + "px";
            chatHistoryContainer.style.left = (buttonRect.right + 10) + "px";
            chatHistoryContainer.style.display = chatHistoryContainer.style.display === "none" ? "block" : "none";
        });
    } 
    /*if (chatHistoryBtn && chatContent){
        chatHistoryBtn.addEventListener("click",function(){
            chatContentainer.classList.toggle("visible");
            const buttonRect = chatHistoryBtn.getBoundingClientRect();
            chatContentainer.style.top = buttonRect.top +"px";
            chatContentainer.style.left = (buttonRect.right+10) +"px";
            chatContentainer.style.display = chatContentainer.style.display === "none" ? "block" :"none";
        });
    }*/
    if (closeCH && chatHistoryContainer){
        closeCH.addEventListener("click",function(){
            chatHistoryContainer.style.display = "none";
        });
    }
    if (closModel){
        closModel.addEventListener("click",function(){
            document.querySelector(".modal").style.display="none";
        });
    }
    if (chatHistoryFilenames){
        eel.get_chat_history_files() (function(files){
            files.forEach(file => addChatFilename(file));
        });
    }
    if(chatHistoryList){
        eel.get_chat_history_files()(function (files){
            files.forEach(file => addChatFilename(file));
        });
    }
    if(chatHistoryList){
        chatHistoryList.addEventListener("click",function(event){
            if(event.target.classList.contains("chat-session-item")){
                console.log("Chat History item Clicked",event.target.innerText);
                document.getElementById("chatHistoryContent").innerText = event.target.innerText;
                document.querySelector(".modal").style.display = "block";
            }
        });
    }
    async function fetchChatFiles() {
                    try {
                        let response = await fetch("chat_history/files.json"); // JSON file storing file names
                        let files = await response.json();
            
                        files.forEach(file => {
                            let listItem = document.createElement("li");
                            listItem.textContent = file;
                            listItem.addEventListener("click", () => loadChatContent(file));
                            chatHistoryList.appendChild(listItem);
                        });
                    } catch (error) {
                        console.error("Error fetching chat files:", error);
                    }
                }
            
                // Load chat content when clicking a file
                async function loadChatContent(fileName) {
                    try {
                        let response = await fetch(`src/chat_history/${fileName}`);
                        let data = await response.json();
                        chatContent.textContent = JSON.stringify(data, null, 2);
                    } catch (error) {
                        console.error("Error loading chat content:", error);
                        chatContent.textContent = "Error loading chat content!";
                    }
                }
            
                fetchChatFiles();

});
// Chat History Modal Handling
document.getElementById("chatHistoryList").addEventListener("click", function(event) {
    if (event.target.classList.contains("chat-session-item")) {
        console.log("Chat History item Clicked",event.target.innerText);
        document.getElementById("chatHistoryContent").innerText = event.target.innerText;
        document.querySelector(".modal").style.display = "block";
    }
});
const closModel = document.querySelector(".close");
if(closModel){
    closModel.addEventListener("click", function() {
        console.log("Close Model Clicked");
        document.querySelector(".modal").style.display = "none";
    });
}


// Exposing functions to Eel
eel.expose(addUserMsg);
eel.expose(addAppMsg);

function addUserMsg(msg) {
    let element = document.getElementById("messages");
    if (!element){
        console.error("Msg container  not found");
        return;
    }
    console.log("User Msg added :",msg);
    element.innerHTML += `<div class="message from ready rtol"> ${msg}</div>`;
    element.scrollTop = element.scrollHeight - element.clientHeight - 15;
    let index = element.childElementCount - 1;
    setTimeout(changeClass.bind(null, element, index, "message from"), 500);
}

function addAppMsg(msg) {
    let element = document.getElementById("messages");
    if (!element){
        console.error("Msg container  not found");
        return;
    }
    console.log("App Msg added :",msg);
    element.innerHTML += `<div class="message to ready ltor"> ${msg}</div>`;
    element.scrollTop = element.scrollHeight- element.clientHeight - 15;
    let index = element.childElementCount - 1;
    setTimeout(changeClass.bind(null, element, index, "message to"), 500);
}

function changeClass(element, index, newClass) {
    console.log(newClass + ' ' + index);
    element.children[index].className = newClass;
}

async function getUserInput() {
    let element = document.getElementById("userInput");
    let msg = element.value.trim();

    if (msg.length !== 0) {
        console.log("User input:", msg);
        element.value = "";

        addUserMsg(msg);  // Store in UI & local storage

        try {
            let response = await eel.getUserInput(msg)();  // Send to backend
            addAppMsg(response);  // Store assistant response

            // Mark sync time
            localStorage.setItem("lastSynced", Date.now().toString());
        } catch (error) {
            console.error("Eel Communication Error:", error);
        }
    }
}


// Voice Recognition
const listeningButton = document.querySelector(".listening");
const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
recognition.lang = 'en-US';
recognition.continuous = false;
recognition.interimResults = false;

listeningButton.addEventListener("click", function() {
    recognition.start();
});

recognition.onresult = function(event) {
    const transcript = event.results[0][0].transcript;
    document.getElementById("userInput").value = transcript;
    getUserInput();
};

recognition.onerror = function(event) {
    console.error("Speech recognition error", event);
};

// Logout function
const logoutButton = document.getElementById("logout");
if (logoutButton) {
    logoutButton.addEventListener("click", function() {
        eel.exit();
    });
}
function loadChatHistory(){
    eel.get_chat_history_files()(function (files){
        let container = document.getElementById("chatHistory");
        if(!container){
            console.error("Chat history conatiner not fonud");
            return;
        }
        container.innerHTML ="";
        files.forEach(file => {
            let historyItem = document.createElement("div");
            historyItem.className = "history-item";
            historyItem.textContent = file ;
            historyItem.onclick = function(){
                loadChatContent(file);
            };
            container.appendChild(historyItem);
        });
    });
}
async function loadChatContent(fileName) {
    let chatContent = document.getElementById("chat-content");
    chatContent.innerHTML = "Loading chat...";

    let localData = JSON.parse(localStorage.getItem(`conversation:${fileName}`));
    let localTimestamp = localStorage.getItem(`lastSynced:${fileName}`) || 0;

    try {
        let serverData = await eel.getChatHistory(fileName)();  // Fetch from backend
        let serverTimestamp = serverData.timestamp || 0;

        // If the server has newer data, update local storage
        if (serverTimestamp > localTimestamp) {
            localStorage.setItem(`conversation:${fileName}`, JSON.stringify(serverData));
            localStorage.setItem(`lastSynced:${fileName}`, serverTimestamp);
            chatContent.textContent = JSON.stringify(serverData, null, 2);
        } else {
            chatContent.textContent = JSON.stringify(localData, null, 2); // Load local data
        }
    } catch (error) {
        console.error("Error fetching chat:", error);
        chatContent.textContent = "Error loading chat!";
    }
}

function addChatHistory(filename) {
    const chatHistoryList = document.getElementById("chatHistoryList");
    const listItem = document.createElement("li");
    listItem.classList.add("chat-item");
    listItem.textContent = filename;
    chatHistoryList.appendChild(listItem);
}
async function syncChatHistory() {
    try {
        let serverFiles = await eel.getAllChatFiles()();  // Fetch all chat files
        let localFiles = JSON.parse(localStorage.getItem("chat_files")) || [];

        // Compare and update missing files
        serverFiles.forEach((file) => {
            if (!localFiles.includes(file)) {
                localFiles.push(file);
                loadChatContent(file);  // Fetch and store missing chat data
            }
        });

        localStorage.setItem("chat_files", JSON.stringify(localFiles));
    } catch (error) {
        console.error("Error syncing chat history:", error);
    }
}

// Run this on page load
window.onload = syncChatHistory;
